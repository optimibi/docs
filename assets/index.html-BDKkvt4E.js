import{_ as e,c as a,a as r,o}from"./app-B6yrGDCh.js";const i="/assets/image-20250313141512471-BNCh_SOI.png",s={};function n(d,t){return o(),a("div",null,t[0]||(t[0]=[r('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>A <strong>Grouped Donut Chart</strong> is used to compare proportions across multiple categories. It displays multiple donut charts side by side, where each donut represents a different group while maintaining the same categorical slices within each.</p><h3 id="when-to-use" tabindex="-1"><a class="header-anchor" href="#when-to-use"><span>When to Use</span></a></h3><ul><li>To <strong>compare proportions</strong> within different groups (e.g., sales distribution by product family across multiple years).</li></ul><h2 id="data-structure" tabindex="-1"><a class="header-anchor" href="#data-structure"><span>Data Structure</span></a></h2><p>A <strong>Grouped Donut Chart</strong> requires:</p><ul><li><strong>Details (Slices)</strong>: A categorical field defining the segments within each donut (e.g., <code>product_family</code>).</li><li><strong>Grouping (Donuts)</strong>: A categorical field used to create separate donut charts (e.g., <code>the_date(Year)</code>).</li><li><strong>Measures</strong>: A numerical field representing the values for each slice (e.g., <code>store_sales</code>).</li><li><strong>Color (Optional)</strong>: Used to set the color of the chart based on categories or numerical values.</li><li><strong>Tooltips (Optional)</strong>: Additional information displayed when hovering over slices.</li><li><strong>Time Axis (Optional)</strong>: Allows for time-based filtering.</li><li><strong>Filters (Optional)</strong>: Used to refine the displayed data (e.g., filtering by region or product type).</li></ul><h3 id="example-data-structure" tabindex="-1"><a class="header-anchor" href="#example-data-structure"><span>Example Data Structure</span></a></h3><table><thead><tr><th>the_date (Year)</th><th>product_family</th><th>store_sales</th></tr></thead><tbody><tr><td>1997</td><td>Food</td><td>40,9035.59</td></tr><tr><td>1997</td><td>Non-Consumable</td><td>10,7355.48</td></tr><tr><td>1997</td><td>Drink</td><td>4,8836.21</td></tr><tr><td>1998</td><td>Food</td><td>77,8135.80</td></tr><tr><td>1998</td><td>Non-Consumable</td><td>20,7269.51</td></tr><tr><td>1998</td><td>Drink</td><td>9,3742.16</td></tr></tbody></table><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div align="left"><img src="'+i+'" width="100%"></div>',11)]))}const c=e(s,[["render",n]]),h=JSON.parse('{"path":"/documentation/Visualization/Grouped-Donut-Chart/","title":"Grouped Donut Chart","lang":"en-US","frontmatter":{"title":"Grouped Donut Chart","permalink":"/documentation/Visualization/Grouped-Donut-Chart/","createTime":"2025/03/18 10:30:55"},"headers":[],"readingTime":{"minutes":0.71,"words":214},"git":{},"filePathRelative":"documentation/Visualization/Chart/31 Grouped Donut Chart.md"}');export{c as comp,h as data};
