import{_ as n,c as r,a as s,b as d,e,d as i,f as a,r as l,o as g}from"./app-DVinL9_W.js";const c={};function h(p,t){const o=l("RouteLink");return g(),r("div",null,[t[6]||(t[6]=s('<p><strong>Method</strong><br><code>POST</code></p><p><strong>Request URL</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/plugin/datafor-modeler/api/connection/add</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',3)),d("p",null,[t[1]||(t[1]=d("strong",null,"Authorization",-1)),t[2]||(t[2]=d("br",null,null,-1)),t[3]||(t[3]=e(" Use of this API requires authentication. For details about the authentication method, see")),t[4]||(t[4]=d("br",null,null,-1)),i(o,{to:"/api/index/#_5-authentication-security"},{default:a(()=>t[0]||(t[0]=[e("Authorization")])),_:1}),t[5]||(t[5]=e("."))]),t[7]||(t[7]=s(`<p><strong>Content Type</strong><br><code>application/json</code></p><p><strong>Preconditions</strong></p><ul><li>The current user&#39;s type <strong>cannot</strong> be <code>SYS_Reader</code>.</li></ul><hr><h3 id="request-schema" tabindex="-1"><a class="header-anchor" href="#request-schema"><span><strong>Request Schema</strong></span></a></h3><table><thead><tr><th>Name</th><th>Location</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><strong>Accept</strong></td><td>header</td><td>string</td><td>No</td><td>Accept header (e.g., <code>application/json</code>)</td></tr><tr><td><strong>Access-Control-Request-Headers</strong></td><td>header</td><td>string</td><td>No</td><td>Specifies which headers will be used during the request</td></tr><tr><td><strong>body</strong></td><td>body</td><td>object</td><td>No</td><td>Overall JSON payload</td></tr><tr><td>├── <strong>SQLServerInstance</strong></td><td>body</td><td>null</td><td>Yes</td><td>Not applicable (SQL Server only)</td></tr><tr><td>├── <strong>accessType</strong></td><td>body</td><td>string</td><td>Yes</td><td>Type of connection access (e.g., <code>NATIVE</code>)</td></tr><tr><td>├── <strong>accessTypeValue</strong></td><td>body</td><td>string</td><td>Yes</td><td>Same as <code>accessType</code></td></tr><tr><td>├── <strong>attributes</strong></td><td>body</td><td>object</td><td>Yes</td><td>Additional connection attributes</td></tr><tr><td>│ ├── <strong>PORT_NUMBER</strong></td><td>body</td><td>string</td><td>Yes</td><td>Port for the database (e.g., <code>25432</code>)</td></tr><tr><td>│ └── <strong>driverId</strong></td><td>body</td><td>string</td><td>Yes</td><td>Driver identifier (e.g., <code>postgresql</code>)</td></tr><tr><td>├── <strong>changed</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Indicates if the connection config has changed</td></tr><tr><td>├── <strong>connectSql</strong></td><td>body</td><td>string</td><td>Yes</td><td>SQL statement to execute upon connection (optional)</td></tr><tr><td>├── <strong>connectionPoolingProperties</strong></td><td>body</td><td>object</td><td>Yes</td><td>Connection pool settings</td></tr><tr><td>│ ├── <strong>initialSize</strong></td><td>body</td><td>string</td><td>Yes</td><td>Initial pool size</td></tr><tr><td>│ ├── <strong>maxActive</strong></td><td>body</td><td>string</td><td>Yes</td><td>Maximum active connections</td></tr><tr><td>│ ├── <strong>maxIdle</strong></td><td>body</td><td>string</td><td>Yes</td><td>Maximum idle connections</td></tr><tr><td>│ └── <strong>minIdle</strong></td><td>body</td><td>string</td><td>Yes</td><td>Minimum idle connections</td></tr><tr><td>├── <strong>dataTablespace</strong></td><td>body</td><td>string</td><td>Yes</td><td>Data tablespace (if applicable)</td></tr><tr><td>├── <strong>databaseName</strong></td><td>body</td><td>string</td><td>Yes</td><td>Name of the database (e.g., <code>foodmart</code>)</td></tr><tr><td>├── <strong>databasePort</strong></td><td>body</td><td>string</td><td>Yes</td><td>Port number (e.g., <code>25432</code>)</td></tr><tr><td>├── <strong>databaseType</strong></td><td>body</td><td>object</td><td>Yes</td><td>Info about the database type</td></tr><tr><td>│ ├── <strong>defaultDatabasePort</strong></td><td>body</td><td>string</td><td>Yes</td><td>Default port (e.g., <code>5432</code>)</td></tr><tr><td>│ ├── <strong>name</strong></td><td>body</td><td>string</td><td>Yes</td><td>Full name of the database type (<code>PostgreSQL</code>)</td></tr><tr><td>│ └── <strong>shortName</strong></td><td>body</td><td>string</td><td>Yes</td><td>Abbreviation of the database type (e.g., <code>POSTGRESQL</code>)</td></tr><tr><td>├── <strong>extraOptions</strong></td><td>body</td><td>object</td><td>Yes</td><td>Additional driver-specific options</td></tr><tr><td>│ └── <strong>POSTGRESQL.TimeZone</strong></td><td>body</td><td>string</td><td>Yes</td><td>Time zone setting (e.g., <code>Australia/Melbourne</code>)</td></tr><tr><td>├── <strong>extraOptionsOrder</strong></td><td>body</td><td>object</td><td>Yes</td><td>Specifies order of extra options</td></tr><tr><td>│ └── <strong>0</strong></td><td>body</td><td>string</td><td>Yes</td><td>The first item in the order list</td></tr><tr><td>├── <strong>forcingIdentifiersToLowerCase</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to force identifiers to lowercase</td></tr><tr><td>├── <strong>forcingIdentifiersToUpperCase</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to force identifiers to uppercase</td></tr><tr><td>├── <strong>hostname</strong></td><td>body</td><td>string</td><td>Yes</td><td>Host IP or domain (e.g., <code>127.0.0.1</code>)</td></tr><tr><td>├── <strong>id</strong></td><td>body</td><td>null</td><td>Yes</td><td>Typically unused; set to null</td></tr><tr><td>├── <strong>indexTablespace</strong></td><td>body</td><td>string</td><td>Yes</td><td>Index tablespace (if applicable)</td></tr><tr><td>├── <strong>informixServername</strong></td><td>body</td><td>string</td><td>Yes</td><td>Server name for Informix (unused for PostgreSQL)</td></tr><tr><td>├── <strong>initialPoolSize</strong></td><td>body</td><td>integer</td><td>Yes</td><td>Initial size for connection pool</td></tr><tr><td>├── <strong>maximumPoolSize</strong></td><td>body</td><td>integer</td><td>Yes</td><td>Maximum pool size</td></tr><tr><td>├── <strong>name</strong></td><td>body</td><td>string</td><td>Yes</td><td>Connection name (e.g., <code>foodmart2</code>)</td></tr><tr><td>├── <strong>partitioned</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether the database is partitioned</td></tr><tr><td>├── <strong>password</strong></td><td>body</td><td>string</td><td>Yes</td><td>Database user password</td></tr><tr><td>├── <strong>quoteAllFields</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to quote all SQL fields</td></tr><tr><td>├── <strong>streamingResults</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to use streaming results</td></tr><tr><td>├── <strong>username</strong></td><td>body</td><td>string</td><td>Yes</td><td>Database user name (e.g., <code>postgres</code>)</td></tr><tr><td>├── <strong>usingConnectionPool</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to use connection pooling</td></tr><tr><td>├── <strong>usingDoubleDecimalAsSchemaTableSeparator</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to treat double decimals as schema-table separators</td></tr><tr><td>├── <strong>PORT_NUMBER</strong></td><td>body</td><td>string</td><td>Yes</td><td>Database port number (duplicate with <code>databasePort</code>)</td></tr><tr><td>├── <strong>driverId</strong></td><td>body</td><td>string</td><td>Yes</td><td>Driver ID (duplicate with <code>attributes.driverId</code>)</td></tr><tr><td>├── <strong>CUSTOM_URL</strong></td><td>body</td><td>null</td><td>Yes</td><td>Custom URL if not using default driver config</td></tr><tr><td>└── <strong>CUSTOM_DRIVER_CLASS</strong></td><td>body</td><td>null</td><td>Yes</td><td>Custom driver class if needed, otherwise null</td></tr></tbody></table><hr><h2 id="response-examples" tabindex="-1"><a class="header-anchor" href="#response-examples"><span><strong>Response Examples</strong></span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">msg</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">success</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">code</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">200</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">success</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http-responses" tabindex="-1"><a class="header-anchor" href="#http-responses"><span><strong>HTTP Responses</strong></span></a></h2><table><thead><tr><th>HTTP Status Code</th><th>Meaning</th><th>Description</th><th>Data schema</th></tr></thead><tbody><tr><td>200</td><td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1" target="_blank" rel="noopener noreferrer">OK</a></td><td>none</td><td>Inline</td></tr></tbody></table><h3 id="response-data-schema-http-200" tabindex="-1"><a class="header-anchor" href="#response-data-schema-http-200"><span><strong>Response Data Schema (HTTP 200)</strong></span></a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>msg</code></td><td>string</td><td>No</td><td>Response message (e.g., <code>&quot;success&quot;</code>)</td></tr><tr><td><code>code</code></td><td>string</td><td>No</td><td>Status code (e.g., <code>&quot;200&quot;</code>)</td></tr><tr><td><code>success</code></td><td>boolean</td><td>Yes</td><td>Indicates whether the request succeeded</td></tr></tbody></table>`,13))])}const u=n(c,[["render",h],["__file","index.html.vue"]]),y=JSON.parse('{"path":"/api/Connections/Add%20a%20connection/","title":"Add a connection","lang":"en-US","frontmatter":{"title":"Add a connection","permalink":"/api/Connections/Add a connection/","tags":["api","Connections"],"description":null,"createTime":"2025/03/16 08:55:28"},"headers":[],"readingTime":{"minutes":1.84,"words":553},"git":{},"filePathRelative":"api/Connections/Add a connection.md"}');export{u as comp,y as data};
