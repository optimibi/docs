import{_ as n,c as a,b as s,o as t}from"./app-DC4pRinF.js";const i={};function o(r,e){return t(),a("div",null,e[0]||(e[0]=[s(`<p>When deploying Optimibi, it is important to ensure that the system has sufficient available resources (CPU, memory, disk space, etc.) to ensure its optimal performance. However, even with sufficient resources, performance issues may arise due to incorrect configurations. This document provides some common Optimibi performance tuning tips to help you optimize the performance of your Optimibi deployment.</p><h2 id="database-tuning" tabindex="-1"><a class="header-anchor" href="#database-tuning"><span>Database Tuning</span></a></h2><p>The query performance of Optimibi analytics reports relies on the query performance of the database. Therefore, tuning the database appropriately can improve Optimibi performance. Here are some common database tuning recommendations:</p><h3 id="use-the-right-database" tabindex="-1"><a class="header-anchor" href="#use-the-right-database"><span>Use the right database</span></a></h3><p>It is recommended to use a scalable and performant database.</p><h3 id="configure-connection-pool" tabindex="-1"><a class="header-anchor" href="#configure-connection-pool"><span>Configure connection pool</span></a></h3><p>A connection pool is a component that manages connections between the application and the database. Using a connection pool can reduce network traffic between the application and the database, and improve performance.</p><p>Here is an example configuration using the c3p0 connection pool:</p><h3 id="configure-caching" tabindex="-1"><a class="header-anchor" href="#configure-caching"><span>Configure caching</span></a></h3><p>Caching is a component that caches data between the application and the database. Using caching can reduce the number of times data is retrieved from the database, and improve performance.</p><h2 id="tomcat-tuning" tabindex="-1"><a class="header-anchor" href="#tomcat-tuning"><span>Tomcat Tuning</span></a></h2><p>Tomcat is the web container that runs Optimibi. Here are some common Tomcat tuning recommendations:</p><h3 id="choose-the-right-connector" tabindex="-1"><a class="header-anchor" href="#choose-the-right-connector"><span>Choose the right connector</span></a></h3><p>The default Tomcat connector used in Optimibi is the HTTP/1.1 NIO protocol connector. This connector uses NIO technology to improve performance and throughput, and supports long connections. In Optimibi, you can find the following connector configuration in the server.xml file:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;Connector port=&quot;8080&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span></span>
<span class="line"><span>           connectionTimeout=&quot;20000&quot;</span></span>
<span class="line"><span>           redirectPort=&quot;8443&quot; /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-the-right-thread-pool-size" tabindex="-1"><a class="header-anchor" href="#set-the-right-thread-pool-size"><span>Set the right thread pool size</span></a></h3><p>Each connector can have a thread pool configured to handle its incoming requests. The thread pool should be configured based on the expected concurrent connections. Optimibi uses the default Tomcat thread pool configuration, which has a default value of 200.</p><p>You can add the maxThreads and minSpareThreads properties to the connector in the server.xml file. Here is an example configuration with a minimum thread count of 300 and a maximum thread count of 500:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span></span>
<span class="line"><span>           connectionTimeout=&quot;20000&quot;</span></span>
<span class="line"><span>           redirectPort=&quot;8443&quot;</span></span>
<span class="line"><span>           maxThreads=&quot;500&quot;</span></span>
<span class="line"><span>           minSpareThreads=&quot;300&quot;</span></span>
<span class="line"><span>           prestartminSpareThreads=&quot;true&quot;</span></span>
<span class="line"><span>           maxIdleTime=&quot;60000&quot; /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="consider-enabling-compression" tabindex="-1"><a class="header-anchor" href="#consider-enabling-compression"><span>Consider enabling compression</span></a></h3><p>Tomcat can compress content sent to browsers and other applications. This can improve performance by reducing network traffic, but requires compression and decompression. It is recommended to enable compression.</p><p>Here is an example configuration:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span></span>
<span class="line"><span>           connectionTimeout=&quot;20000&quot;</span></span>
<span class="line"><span>           redirectPort=&quot;8443&quot;</span></span>
<span class="line"><span>           compression=&quot;on&quot; /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="host-static-content-on-a-web-server" tabindex="-1"><a class="header-anchor" href="#host-static-content-on-a-web-server"><span>Host static content on a web server</span></a></h3><p>Tomcat is designed to provide dynamic web content. Therefore, it is recommended to use a web server such as Apache HTTP Server as a front-end to Tomcat to allow the web server to serve static content. In the Optimibi documentation, it is recommended to store any static content referenced by report images or dashboards on a web server, rather than within the Tomcat that hosts Optimibi.</p><h2 id="jvm-tuning" tabindex="-1"><a class="header-anchor" href="#jvm-tuning"><span>JVM Tuning</span></a></h2><p>Tomcat runs on the JVM, so adjusting JVM parameters can improve performance. Here are some common JVM tuning recommendations:</p><h3 id="increase-memory" tabindex="-1"><a class="header-anchor" href="#increase-memory"><span>Increase memory</span></a></h3><p>The minimum and maximum heap sizes can be set using the -Xms and -Xmx parameters. It is recommended to set them to the same value, and adjust the maximum heap size based on your application&#39;s needs.</p><p>For example:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>java -Xms512m -Xmx1024m -jar app.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="enable-garbage-collection-logging" tabindex="-1"><a class="header-anchor" href="#enable-garbage-collection-logging"><span>Enable garbage collection logging</span></a></h3><p>The JVM provides some parameters that can enable garbage collection logging to better understand the behavior of garbage collectors in the JVM. Here are some common options:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>-XX:+PrintGC</span></span>
<span class="line"><span>-XX:+PrintGCTimeStamps</span></span>
<span class="line"><span>-XX:+PrintHeapAtGC</span></span>
<span class="line"><span>-XX:+PrintTenuringDistribution</span></span>
<span class="line"><span>-XX:+PrintGCApplicationStoppedTime</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enable-compiler-optimizations" tabindex="-1"><a class="header-anchor" href="#enable-compiler-optimizations"><span>Enable compiler optimizations</span></a></h3><p>The JVM includes a JIT that compiles Java bytecode into native code. The following parameters can enable JIT optimizations:</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>-XX:+AggressiveOpts</span></span>
<span class="line"><span>-XX:+TieredCompilation</span></span>
<span class="line"><span>-XX:+OptimizeStringConcat</span></span>
<span class="line"><span>-XX:+UseCompressedOops</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="considerations" tabindex="-1"><a class="header-anchor" href="#considerations"><span>Considerations</span></a></h2><p>Adjusting Optimibi, Tomcat, and JVM parameters can have unexpected impacts on the system. Before making any changes, be sure to back up your system and test and evaluate in a production environment to ensure that the changes you make do not cause system crashes or declines in performance.</p>`,39)]))}const p=n(i,[["render",o],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/documentation/Best/Performance-Tuning/","title":"Performance Tuning","lang":"en-US","frontmatter":{"title":"Performance Tuning","permalink":"/documentation/Best/Performance-Tuning/","tags":null,"createTime":"2025/03/01 07:10:16"},"headers":[],"readingTime":{"minutes":2.25,"words":675},"git":{},"filePathRelative":"documentation/Best/10 Datafor 性能调优.md"}');export{p as comp,d as data};
