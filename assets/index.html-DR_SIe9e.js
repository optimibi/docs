import{_ as e,c as a,a as r,o as i}from"./app-_KOGfFK8.js";const s="/assets/image-20250313140811232-BjGQC7UG.png",o={};function n(d,t){return i(),a("div",null,t[0]||(t[0]=[r('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>A <strong>Treemap Chart</strong> is used to visualize hierarchical data as a set of nested rectangles. Each branch of the hierarchy is represented by a rectangle, and its size corresponds to a specific measure. This type of chart is useful for analyzing proportions and identifying dominant categories within a dataset.</p><h3 id="when-to-use" tabindex="-1"><a class="header-anchor" href="#when-to-use"><span>When to Use</span></a></h3><ul><li>To <strong>visualize hierarchical data</strong> in a compact and space-efficient way.</li><li>To <strong>compare proportions</strong> between different categories and subcategories.</li><li>To <strong>identify patterns</strong> such as the largest or smallest contributors within a dataset.</li></ul><h2 id="data-structure" tabindex="-1"><a class="header-anchor" href="#data-structure"><span>Data Structure</span></a></h2><p>A <strong>Treemap Chart</strong> requires:</p><ul><li><strong>Series</strong>: A categorical field representing the top-level grouping (e.g., <code>the_date(Month)</code>).</li><li><strong>Detail</strong>: A categorical field defining subcategories within each group (e.g., <code>store_type</code>).</li><li><strong>Measure</strong>: A numerical field representing the value used to size the rectangles (e.g., <code>store_sales</code>).</li><li><strong>Color (Optional)</strong>: Used to set the color of the chart based on categories or numerical values (e.g., <code>store_sales</code> for intensity-based coloring, or a categorical field for distinct colors).</li><li><strong>Tooltips (Optional)</strong>: Additional information to be displayed when hovering over the sections.</li><li><strong>Time Axis (Optional)</strong>: Allows for time-based filtering.</li><li><strong>Filters (Optional)</strong>: Used to refine the displayed data (e.g., filtering by year or region).</li></ul><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><h3 id="data-structure-1" tabindex="-1"><a class="header-anchor" href="#data-structure-1"><span>Data Structure</span></a></h3><table><thead><tr><th>the_date (Month)</th><th>store_type</th><th>store_sales</th></tr></thead><tbody><tr><td>1998-11</td><td>Supermarket</td><td>73920.69</td></tr><tr><td>1998-11</td><td>Deluxe Supermarket</td><td>62067.19</td></tr><tr><td>1998-11</td><td>Gourmet Supermarket</td><td>14364.67</td></tr><tr><td>1998-11</td><td>Mid-Size Grocery</td><td>10940.17</td></tr><tr><td>1998-11</td><td>Small Grocery</td><td>5458.03</td></tr><tr><td>1998-09</td><td>Supermarket</td><td>78567.44</td></tr><tr><td>1998-09</td><td>Deluxe Supermarket</td><td>65789.32</td></tr><tr><td>1998-09</td><td>Gourmet Supermarket</td><td>16789.53</td></tr></tbody></table><h3 id="treemap-chart" tabindex="-1"><a class="header-anchor" href="#treemap-chart"><span>Treemap Chart</span></a></h3><div align="left"><img src="'+s+'" width="100%"></div>',12)]))}const c=e(o,[["render",n],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/documentation/Visualization/Treemap/","title":"Treemap Chart","lang":"en-US","frontmatter":{"title":"Treemap Chart","permalink":"/documentation/Visualization/Treemap/","createTime":"2025/03/16 08:47:42"},"headers":[],"readingTime":{"minutes":0.89,"words":267},"git":{},"filePathRelative":"documentation/Visualization/Chart/71 Treemap-Chart.md"}');export{c as comp,h as data};
