import{_ as r,c as n,a as s,b as d,e,d as a,w as i,r as l,o as g}from"./app-D_DSbTN4.js";const c={};function h(p,t){const o=l("RouteLink");return g(),n("div",null,[t[6]||(t[6]=s('<p><strong>Method</strong><br><code>POST</code></p><p><strong>Request URL</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/plugin/datafor/api/alert/update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',3)),d("p",null,[t[1]||(t[1]=d("strong",null,"Authorization",-1)),t[2]||(t[2]=d("br",null,null,-1)),t[3]||(t[3]=e(" Use of this API requires authentication. For details about the authentication method, see")),t[4]||(t[4]=d("br",null,null,-1)),a(o,{to:"/api/index/#_5-authentication-security"},{default:i(()=>t[0]||(t[0]=[e("Authorization")])),_:1,__:[0]}),t[5]||(t[5]=e("."))]),t[7]||(t[7]=s(`<p><strong>Content Type</strong><br><code>application/json</code></p><p><strong>Preconditions</strong></p><ul><li>The current user must have <strong>administrative</strong> privileges for the alert.</li></ul><hr><h3 id="request-schema" tabindex="-1"><a class="header-anchor" href="#request-schema"><span><strong>Request Schema</strong></span></a></h3><table><thead><tr><th>Name</th><th>Location</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><strong>body</strong></td><td>body</td><td>object</td><td>No</td><td>Overall JSON payload</td></tr><tr><td>├── <strong>enabled</strong></td><td>body</td><td>string</td><td>Yes</td><td><code>1</code> (true) or <code>0</code> (false)</td></tr><tr><td>├── <strong>name</strong></td><td>body</td><td>string</td><td>Yes</td><td>Alert name</td></tr><tr><td>├── <strong>title</strong></td><td>body</td><td>string</td><td>Yes</td><td>Alert title</td></tr><tr><td>├── <strong>rule</strong></td><td>body</td><td>object</td><td>Yes</td><td>Defines alert conditions</td></tr><tr><td>│ ├── <strong>logical</strong></td><td>body</td><td>string</td><td>Yes</td><td>Logical operator: <code>and</code> or <code>or</code></td></tr><tr><td>│ └── <strong>conditions</strong></td><td>body</td><td>[object]</td><td>Yes</td><td>Array of condition objects</td></tr><tr><td>│ ├── <strong>id</strong></td><td>body</td><td>string</td><td>No</td><td>Unique condition/measure ID</td></tr><tr><td>│ ├── <strong>uniqueName</strong></td><td>body</td><td>string</td><td>No</td><td>Unique measure identifier</td></tr><tr><td>│ ├── <strong>comparator</strong></td><td>body</td><td>string</td><td>No</td><td>Comparison operator (e.g., <code>&lt;</code>, <code>&gt;</code>, <code>==</code>, etc.)</td></tr><tr><td>│ ├── <strong>value</strong></td><td>body</td><td>[integer]</td><td>No</td><td>Values for comparison</td></tr><tr><td>│ ├── <strong>inclusiveLeft</strong></td><td>body</td><td>boolean</td><td>No</td><td>Used when comparator is <code>between</code>/<code>not between</code></td></tr><tr><td>│ ├── <strong>inclusiveRight</strong></td><td>body</td><td>boolean</td><td>No</td><td>Used when comparator is <code>between</code>/<code>not between</code></td></tr><tr><td>│ └── <strong>match</strong></td><td>body</td><td>string</td><td>No</td><td><code>any</code> or <code>all</code> (default: <code>any</code>)</td></tr><tr><td>├── <strong>qm</strong></td><td>body</td><td>object</td><td>Yes</td><td>Query configuration wrapper</td></tr><tr><td>│ ├── <strong>queryModel</strong></td><td>body</td><td>object</td><td>Yes</td><td>OLAP axes, measures, etc.</td></tr><tr><td>│ │ ├── <strong>axes</strong></td><td>body</td><td>object</td><td>Yes</td><td>Configuration for <code>FILTER</code>, <code>COLUMNS</code>, <code>ROWS</code></td></tr><tr><td>│ │ │ ├── <strong>FILTER</strong></td><td>body</td><td>object</td><td>Yes</td><td>Filter axis</td></tr><tr><td>│ │ │ ├── <strong>COLUMNS</strong></td><td>body</td><td>object</td><td>Yes</td><td>Columns axis</td></tr><tr><td>│ │ │ └── <strong>ROWS</strong></td><td>body</td><td>object</td><td>Yes</td><td>Rows axis</td></tr><tr><td>│ │ ├── <strong>visualTotals</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to enable visual totals</td></tr><tr><td>│ │ ├── <strong>visualTotalsPattern</strong></td><td>body</td><td>null</td><td>Yes</td><td>Pattern for visual totals (not used if <code>false</code>)</td></tr><tr><td>│ │ ├── <strong>lowestLevelsOnly</strong></td><td>body</td><td>boolean</td><td>Yes</td><td>Whether to only show lowest hierarchy levels</td></tr><tr><td>│ │ ├── <strong>details</strong></td><td>body</td><td>object</td><td>Yes</td><td>Additional detail settings</td></tr><tr><td>│ │ ├── <strong>calculatedMeasures</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>Calculated measures (if any)</td></tr><tr><td>│ │ ├── <strong>calculatedMembers</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>Calculated members (if any)</td></tr><tr><td>│ │ ├── <strong>queryType</strong></td><td>body</td><td>string</td><td>Yes</td><td>E.g., <code>OLAP</code></td></tr><tr><td>│ │ ├── <strong>properties</strong></td><td>body</td><td>object</td><td>Yes</td><td>Misc. query properties</td></tr><tr><td>│ │ ├── <strong>parameters</strong></td><td>body</td><td>object</td><td>Yes</td><td>Query parameters (if any)</td></tr><tr><td>│ │ ├── <strong>plugins</strong></td><td>body</td><td>object</td><td>Yes</td><td>Plugin configuration</td></tr><tr><td>│ │ ├── <strong>mdx</strong></td><td>body</td><td>null</td><td>Yes</td><td>Not used in this example</td></tr><tr><td>│ │ ├── <strong>name</strong></td><td>body</td><td>string</td><td>Yes</td><td>The component ID (same as <code>componentId</code>)</td></tr><tr><td>│ │ ├── <strong>metadata</strong></td><td>body</td><td>object</td><td>Yes</td><td>Metadata object</td></tr><tr><td>│ │ ├── <strong>type</strong></td><td>body</td><td>string</td><td>Yes</td><td>E.g., <code>QUERYMODEL</code></td></tr><tr><td>│ │ └── <strong>cube</strong></td><td>body</td><td>object</td><td>Yes</td><td>Cube definition (schema, catalog, etc.)</td></tr><tr><td>├── <strong>cron</strong></td><td>body</td><td>object</td><td>Yes</td><td>Scheduling configuration</td></tr><tr><td>│ └── <strong>complexJobTrigger</strong></td><td>body</td><td>object</td><td>Yes</td><td>Detailed scheduling settings</td></tr><tr><td>│ ├── <strong>endTime</strong></td><td>body</td><td>null</td><td>Yes</td><td>End time (null if open-ended)</td></tr><tr><td>│ ├── <strong>startTime</strong></td><td>body</td><td>string</td><td>Yes</td><td>Start time (e.g., <code>2024-08-07T12:00:00.000+08:00</code>)</td></tr><tr><td>│ ├── <strong>uiPassParam</strong></td><td>body</td><td>string</td><td>Yes</td><td>Scheduling frequency (e.g., <code>WEEKLY</code>)</td></tr><tr><td>│ └── <strong>daysOfWeek</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>E.g., <code>[&quot;0&quot;]</code> for Sunday</td></tr><tr><td>├── <strong>channels</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>Alert channels (e.g., <code>[&quot;email&quot;]</code>)</td></tr><tr><td>├── <strong>emailConfig</strong></td><td>body</td><td>object</td><td>Yes</td><td>Email alert configuration</td></tr><tr><td>│ ├── <strong>toUsers</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>Recipients of the alert email</td></tr><tr><td>│ ├── <strong>ccUsers</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>CC recipients</td></tr><tr><td>│ ├── <strong>bccUsers</strong></td><td>body</td><td>[string]</td><td>Yes</td><td>BCC recipients</td></tr><tr><td>│ ├── <strong>subject</strong></td><td>body</td><td>string</td><td>Yes</td><td>Email subject</td></tr><tr><td>│ ├── <strong>content</strong></td><td>body</td><td>string</td><td>Yes</td><td>Email body (plain or rich text)</td></tr><tr><td>│ └── <strong>executor</strong></td><td>body</td><td>string</td><td>Yes</td><td>Username who configures or triggers the alert</td></tr><tr><td>├── <strong>pagePath</strong></td><td>body</td><td>string</td><td>Yes</td><td>Full path of the page (e.g., <code>/public/test.datafor</code>)</td></tr><tr><td>├── <strong>componentId</strong></td><td>body</td><td>string</td><td>Yes</td><td>The component’s ID</td></tr><tr><td>└── <strong>componentTitle</strong></td><td>body</td><td>string</td><td>Yes</td><td>The component title (e.g., &quot;test&quot;)</td></tr></tbody></table><h4 id="enum-values" tabindex="-1"><a class="header-anchor" href="#enum-values"><span><strong>Enum Values</strong></span></a></h4><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td><strong>comparator</strong></td><td><code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code>, <code>!=</code>, <code>between</code>, <code>not between</code>, <code>in</code>, <code>not in</code>, <code>is empty</code>, <code>is not empty</code></td></tr></tbody></table><hr><h2 id="response-examples" tabindex="-1"><a class="header-anchor" href="#response-examples"><span><strong>Response Examples</strong></span></a></h2><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">msg</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">success</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">success</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http-responses" tabindex="-1"><a class="header-anchor" href="#http-responses"><span><strong>HTTP Responses</strong></span></a></h2><table><thead><tr><th>HTTP Status Code</th><th>Meaning</th><th>Description</th><th>Data schema</th></tr></thead><tbody><tr><td>200</td><td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1" target="_blank" rel="noopener noreferrer">OK</a></td><td>none</td><td>Inline</td></tr></tbody></table><h3 id="response-data-schema-http-200" tabindex="-1"><a class="header-anchor" href="#response-data-schema-http-200"><span><strong>Response Data Schema (HTTP 200)</strong></span></a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>msg</code></td><td>string</td><td>No</td><td>Message string</td></tr><tr><td><code>success</code></td><td>boolean</td><td>Yes</td><td>Request status</td></tr></tbody></table>`,15))])}const u=r(c,[["render",h]]),y=JSON.parse('{"path":"/api/Alert/Update%20%20an%20alert/","title":"Update  an alert","lang":"en-US","frontmatter":{"title":"Update  an alert","permalink":"/api/Alert/Update  an alert/","tags":["api","Alert"],"description":null,"createTime":"2025/05/19 08:47:12"},"headers":[],"readingTime":{"minutes":1.82,"words":546},"git":{},"filePathRelative":"api/Alert/Update  an alert.md"}');export{u as comp,y as data};
